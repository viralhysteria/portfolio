import React, { useState, useEffect } from "react";
import DOMPurify from "dompurify";
import props from "./skillsProps";

function Bubble(props) {
  useEffect(() => {
    import('bootstrap/dist/js/bootstrap.bundle.min.js');
  }, []);

  const [showModal, setShowModal] = useState(false);

  const rank = "â˜…".repeat(props.level);

  return (
    <div className="col-4">
      <div
        className="circle hvr-pulse select"
        data-bs-html="true"
        style={{ background: `${props.gradient}` }}
      >
        <i
          className={`${props.icon}`}
          data-bs-toggle="modal"
          data-bs-target={`#${props.id}Modal`}
        ></i>
      </div>

      {props.useModal && (
        <div
          id={`${props.id}Modal`}
          className="modal fade"
          aria-hidden="true"
          data-bs-backdrop="static"
          data-bs-dismiss="modal"
        >
          <div className="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <div className="modal-content">
              <div className="modal-header">
                <h1 id={`${props.id}ModalLabel`} className="modal-title">
                  {props.title}
                </h1>
                <button
                  type="button"
                  className="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              {props.body ? (
                <div
                  className={`modal-body fw-normal ${
                    props.center ? "text-center" : "text-start"
                  }`}
                  dangerouslySetInnerHTML={{
                    __html: DOMPurify.sanitize(props.body),
                  }}
                />
              ) : (
                props.children
              )}
              <div className="modal-footer">
                <span className="rank">{rank}</span>
                {props.sage && (
                  <p
                    dangerouslySetInnerHTML={{
                      __html: `Drafted using <a href="https://poe.com/sage">Sage</a>`,
                    }}
                  />
                  // there might be a vector here ^
                )}
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default function Grid() {
  const rows = [];

  for (let i = 0; i < props.length; i += 3) {
    const row = (
      <div className="row justify-content-around" key={i}>
        {props.slice(i, i + 3).map((skill) => (
          <Bubble key={skill.id} {...skill} />
        ))}
      </div>
    );
    rows.push(row);
  }

  return <>{rows}</>;
}
